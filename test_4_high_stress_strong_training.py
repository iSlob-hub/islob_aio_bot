#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö –¥–ª—è —Å—Ü–µ–Ω–∞—Ä—ñ—é 4:
–°—Ç—Ä–µ—Å –≤–∏—Å–æ–∫–∏–π, —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è —Å—Ç–∞–±—ñ–ª—å–Ω—ñ —Ç–∞ —Å–∏–ª—å–Ω—ñ, —Å–æ–Ω –º–∞–π–∂–µ –Ω–æ—Ä–º–∞–ª—å–Ω–∏–π (–æ–∫—Ä—ñ–º –ø—Ä–æ–≤–∞–ª—É), 
—Å–∞–º–æ–ø–æ—á—É—Ç—Ç—è —Ö–æ—Ä–æ—à–µ –∞–ª–µ –ø–∞–¥–∞—î, –≤–∞–≥–∞ —Å—Ç–∞–±—ñ–ª—å–Ω–∞.
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∫–æ–ª–∏ —î —Å–∏–ª—å–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å —É —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è—Ö, –∞–ª–µ —Ñ–æ–Ω–æ–≤—ñ –ø—Ä–æ–±–ª–µ–º–∏ –º–æ–∂—É—Ç—å –∑–≤–µ—Å—Ç–∏ –Ω–∞–Ω—ñ–≤–µ—Ü—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
"""

import asyncio
from datetime import datetime, timedelta
from app.db.database import init_db
from app.db.models import (
    User, MorningQuiz, TrainingSession, UserStatistics, 
    PeriodType, TrainingGoal
)
from zoneinfo import ZoneInfo

async def create_high_stress_strong_training_scenario():
    """
    –°—Ü–µ–Ω–∞—Ä—ñ–π 4: –í–∏—Å–æ–∫–∏–π —Å—Ç—Ä–µ—Å –∞–ª–µ —Å–∏–ª—å–Ω—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
    –í–∏—Å–æ–∫–∏–π —Å—Ç—Ä–µ—Å, —Å—Ç–∞–±—ñ–ª—å–Ω—ñ —Å–∏–ª—å–Ω—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è, –º–∞–π–∂–µ –Ω–æ—Ä–º–∞–ª—å–Ω–∏–π —Å–æ–Ω –∑ –ø—Ä–æ–≤–∞–ª–æ–º, –ø–∞–¥—ñ–Ω–Ω—è —Å–∞–º–æ–ø–æ—á—É—Ç—Ç—è, —Å—Ç–∞–±—ñ–ª—å–Ω–∞ –≤–∞–≥–∞
    """
    await init_db()
    
    test_user_id = "high_stress_strong_training_user"
    
    # –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ —Ü—ñ–ª–ª—é –Ω–∞–±–æ—Ä—É –º'—è–∑–æ–≤–æ—ó –º–∞—Å–∏
    test_user = User(
        telegram_id=test_user_id,
        full_name="–í–∏—Å–æ–∫–∏–π –°—Ç—Ä–µ—Å –°–∏–ª—å–Ω—ñ –¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è",
        telegram_username="high_stress_strong_training",
        is_active=True,
        is_verified=True,
        training_goal=TrainingGoal.BUILD_MUSCLE
    )
    await test_user.save()
    print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {test_user.full_name}")
    
    # –ü–µ—Ä—ñ–æ–¥ (22 –≤–µ—Ä–µ—Å–Ω—è 2025, 21:23)
    start_date = datetime(2025, 9, 22, 21, 23, tzinfo=ZoneInfo("Europe/Kyiv"))
    
    # –î–∞–Ω—ñ –¥–ª—è –≤–∏—Å–æ–∫–æ–≥–æ —Å—Ç—Ä–µ—Å—É –∑ —Å–∏–ª—å–Ω–∏–º–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è–º–∏ (7 –¥–Ω—ñ–≤)
    daily_data = [
        # –î–µ–Ω—å 1 - –¥–æ–±—Ä–∏–π —Å—Ç–∞—Ä—Ç –∞–ª–µ —Å—Ç—Ä–µ—Å
        {"stress": 6, "sleep": 7.5, "wellbeing": 7, "training": 8, "weight": 77.0},
        # –î–µ–Ω—å 2 - —Å—Ç—Ä–µ—Å –∑—Ä–æ—Å—Ç–∞—î, —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è —Å–∏–ª—å–Ω—ñ
        {"stress": 7, "sleep": 7.0, "wellbeing": 7, "training": 8, "weight": 77.1},
        # –î–µ–Ω—å 3 - –ü–†–û–í–ê–õ –£ –°–ù–Ü, –∞–ª–µ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –Ω–∞ —Ä—ñ–≤–Ω—ñ
        {"stress": 8, "sleep": 4.0, "wellbeing": 5, "training": 8, "weight": 76.9},
        # –î–µ–Ω—å 4 - —Å—Ç—Ä–µ—Å —Å—Ç–∞–±—ñ–ª—å–Ω–æ –≤–∏—Å–æ–∫–∏–π
        {"stress": 7, "sleep": 7.5, "wellbeing": 6, "training": 9, "weight": 77.0},
        # –î–µ–Ω—å 5 - —Å–∞–º–æ–ø–æ—á—É—Ç—Ç—è –ø–∞–¥–∞—î
        {"stress": 8, "sleep": 7.0, "wellbeing": 5, "training": 8, "weight": 77.1},
        # –î–µ–Ω—å 6 - –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Å—Ç—Ä–µ—Å—É
        {"stress": 7, "sleep": 6.5, "wellbeing": 4, "training": 8, "weight": 76.8},
        # –î–µ–Ω—å 7 - –ø—ñ–∫ —Ç—Ä–µ–Ω—É–≤–∞–Ω—å –∞–ª–µ —Å–∞–º–æ–ø–æ—á—É—Ç—Ç—è –Ω–∏–∑—å–∫–µ
        {"stress": 8, "sleep": 7.0, "wellbeing": 4, "training": 9, "weight": 77.0}
    ]
    
    training_sessions_count = 0
    morning_quizzes_count = 0
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∞–Ω—ñ –ø–æ –¥–Ω—è—Ö
    for day, data in enumerate(daily_data):
        current_date = start_date + timedelta(days=day)
        
        # –†–∞–Ω–∫–æ–≤—ñ –∫–≤—ñ–∑–∏ –∑—ñ —Å—Ç–∞–±—ñ–ª—å–Ω–æ—é –≤–∞–≥–æ—é
        morning_quiz = MorningQuiz(
            user_id=test_user_id,
            how_do_you_feel_today=data["wellbeing"],
            how_many_hours_of_sleep=data["sleep"],
            weight=data["weight"],
            is_going_to_gym=True,  # –ó–∞–≤–∂–¥–∏ –π–¥–µ —Ç—Ä–µ–Ω—É–≤–∞—Ç–∏—Å—è
            gym_attendance_time=current_date.replace(hour=19, minute=0),
            completed=True,
            created_at=current_date.replace(hour=8, minute=0)
        )
        await morning_quiz.save()
        morning_quizzes_count += 1
        
        # –°—Ç–∞–±—ñ–ª—å–Ω–æ —Å–∏–ª—å–Ω—ñ —Ç—Ä–µ–Ω—É–≤–∞–ª—å–Ω—ñ —Å–µ—Å—ñ—ó
        training_session = TrainingSession(
            user_id=test_user_id,
            how_do_you_feel_before=max(data["wellbeing"], 5),  # –ï–Ω–µ—Ä–≥—ñ—è –¥–ª—è —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
            how_hard_was_training=data["training"],
            do_you_have_any_pain=False,
            training_started_at=current_date.replace(hour=19, minute=0),
            training_ended_at=current_date.replace(hour=20, minute=30),  # –î–æ–≤–≥—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
            training_duration=90,
            stress_level=data["stress"],
            do_you_have_soreness=True if data["training"] >= 8 else False,
            completed=True,
            created_at=current_date.replace(hour=19, minute=0)
        )
        await training_session.save()
        training_sessions_count += 1
    
    print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ {morning_quizzes_count} —Ä–∞–Ω–∫–æ–≤–∏—Ö –∫–≤—ñ–∑—ñ–≤")
    print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ {training_sessions_count} —Ç—Ä–µ–Ω—É–≤–∞–ª—å–Ω–∏—Ö —Å–µ—Å—ñ–π")
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    end_date = start_date + timedelta(days=6, hours=23, minutes=59, seconds=59)
    
    # –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –º–µ—Ç—Ä–∏–∫–∏
    stress_avg = sum(d["stress"] for d in daily_data) / len(daily_data)  # 7.3
    sleep_avg = sum(d["sleep"] for d in daily_data) / len(daily_data)    # 6.7
    wellbeing_avg = sum(d["wellbeing"] for d in daily_data) / len(daily_data)  # 5.4
    training_avg = sum(d["training"] for d in daily_data) / len(daily_data)    # 8.3
    
    start_weight = daily_data[0]["weight"]
    end_weight = daily_data[-1]["weight"]
    weight_change = end_weight - start_weight  # 0.0
    
    user_statistics = UserStatistics(
        user_id=test_user_id,
        period_type=PeriodType.WEEKLY,
        period_start=start_date,
        period_end=end_date,
        total_training_sessions=training_sessions_count,
        total_morning_quizzes=morning_quizzes_count,
        
        # –°—Ç—Ä–µ—Å: –≤–∏—Å–æ–∫–∏–π 7.3, —Å—Ç–∞–±—ñ–ª—å–Ω–æ 6-8
        stress_data={
            "chart_type": "line",
            "average": 7.3,
            "trend": "high_stable",
            "data_points": [
                {"date": (start_date + timedelta(days=i)).strftime("%Y-%m-%d"), "value": daily_data[i]["stress"]}
                for i in range(len(daily_data))
            ]
        },
        
        # –¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è: —Å—Ç–∞–±—ñ–ª—å–Ω–æ —Å–∏–ª—å–Ω—ñ 8.3, –ø—ñ–∫ –¥–æ 9
        warehouse_data={
            "chart_type": "bar",
            "average": 8.3,
            "trend": "stable_high",
            "data_points": [
                {"date": (start_date + timedelta(days=i)).strftime("%Y-%m-%d"), "value": daily_data[i]["training"]}
                for i in range(len(daily_data))
            ]
        },
        
        # –°–æ–Ω: –º–∞–π–∂–µ –Ω–æ—Ä–º–∞–ª—å–Ω–∏–π 6.7 –≥–æ–¥–∏–Ω, –∞–ª–µ —î –ø—Ä–æ–≤–∞–ª –¥–æ 4
        sleep_data={
            "chart_type": "line",
            "average": 6.7,
            "trend": "almost_normal_with_dip",
            "total_sleep_hours": sum(d["sleep"] for d in daily_data),
            "data_points": [
                {"date": (start_date + timedelta(days=i)).strftime("%Y-%m-%d"), "value": daily_data[i]["sleep"]}
                for i in range(len(daily_data))
            ]
        },
        
        # –°–∞–º–æ–ø–æ—á—É—Ç—Ç—è: –ø–∞–¥–∞—î –∑ 7 –¥–æ 4, —Å–µ—Ä–µ–¥–Ω—î 5.4
        wellbeing_data={
            "chart_type": "line",
            "average": 5.4,
            "trend": "decreasing",
            "data_points": [
                {"date": (start_date + timedelta(days=i)).strftime("%Y-%m-%d"), "value": daily_data[i]["wellbeing"]}
                for i in range(len(daily_data))
            ]
        },
        
        # –í–∞–≥–∞: —Å—Ç–∞–±—ñ–ª—å–Ω–∞ ¬±0.3–∫–≥
        weight_data={
            "chart_type": "line",
            "average": round((start_weight + end_weight) / 2, 1),
            "trend": "stable",
            "start_weight": start_weight,
            "end_weight": end_weight,
            "weight_change": round(weight_change, 1),
            "data_points": [
                {"date": (start_date + timedelta(days=i)).strftime("%Y-%m-%d"), "value": daily_data[i]["weight"]}
                for i in range(len(daily_data))
            ]
        },
        
        is_complete=True,
        generated_at=datetime.now(ZoneInfo("Europe/Kyiv"))
    )
    
    await user_statistics.save()
    print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –ø–µ—Ä—ñ–æ–¥—É {start_date.date()} - {end_date.date()}")
    
    # –í–∏–≤–æ–¥–∏–º–æ –ø—ñ–¥—Å—É–º–æ–∫
    print(f"""
üìä –°—Ü–µ–Ω–∞—Ä—ñ–π 4 - –í–∏—Å–æ–∫–∏–π —Å—Ç—Ä–µ—Å –∞–ª–µ —Å–∏–ª—å–Ω—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è:
üßò‚Äç‚ôÇÔ∏è –°–µ—Ä–µ–¥–Ω—ñ–π —Å—Ç—Ä–µ—Å: {stress_avg:.1f} (–í–ò–°–û–ö–ò–ô, —Å—Ç–∞–±—ñ–ª—å–Ω–æ 6-8)
üí™ –°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å —Ç—Ä–µ–Ω—É–≤–∞–Ω—å: {training_avg:.1f} (–°–¢–ê–ë–Ü–õ–¨–ù–û –°–ò–õ–¨–ù–Ü, –ø—ñ–∫ 9)
üò¥ –°–µ—Ä–µ–¥–Ω—ñ–π —Å–æ–Ω: {sleep_avg:.1f} –≥–æ–¥–∏–Ω (–º–∞–π–∂–µ –Ω–æ—Ä–º–∞, –∞–ª–µ —î –ø—Ä–æ–≤–∞–ª –¥–æ 4)
üòÑ –ó–∞–≥–∞–ª—å–Ω–µ —Å–∞–º–æ–ø–æ—á—É—Ç—Ç—è: {wellbeing_avg:.1f} (–ü–ê–î–ê–Ñ –∑ 7 –¥–æ 4)
üî• –ó–º—ñ–Ω–∞ –≤–∞–≥–∏: {weight_change:.1f} –∫–≥ (—Å—Ç–∞–±—ñ–ª—å–Ω–∞)
üéØ –¶—ñ–ª—å: {test_user.training_goal.value}

–û—á—ñ–∫—É–≤–∞–Ω–∏–π –∞–Ω–∞–ª—ñ–∑: —Å–∏–ª—å–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å —É —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è—Ö, –∞–ª–µ —Ñ–æ–Ω–æ–≤—ñ –ø—Ä–æ–±–ª–µ–º–∏
(—Å—Ç—Ä–µ—Å, –ø–∞–¥—ñ–Ω–Ω—è —Å–∞–º–æ–ø–æ—á—É—Ç—Ç—è) –º–æ–∂—É—Ç—å –∑–≤–µ—Å—Ç–∏ –Ω–∞–Ω—ñ–≤–µ—Ü—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
""")

if __name__ == "__main__":
    print("–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö –¥–ª—è –°—Ü–µ–Ω–∞—Ä—ñ—é 4 (–í–∏—Å–æ–∫–∏–π —Å—Ç—Ä–µ—Å –∞–ª–µ —Å–∏–ª—å–Ω—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è)...")
    asyncio.run(create_high_stress_strong_training_scenario())
    print("‚úÖ –°—Ü–µ–Ω–∞—Ä—ñ–π 4 –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")